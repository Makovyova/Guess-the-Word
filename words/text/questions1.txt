# -*- coding: utf-8 -*-
from navec import Navec;
from graphviz import Digraph;
def rules():
    print(" Правила : \n 1)Придумайте слово, но не называйте его.\n 2)Слово должно быть существительным в И.П. и реально существовать.\n 3)Ответами могут быть только горячо/тепло/нейтрально/прохладно/холодно \n");

def questions_ask():
    is_alive=navec.vocab['живое']
    print(f"Оно живое? {is_alive}")
    is_alive_mem=input()

    print("Это человек?")

    print("Оно материальное(можно пощупать)?")
    second_question=input()

    print("Это абстрактное понятие?")
    third_question=input()

    print("Оно большое?")
    fourth_question=input()

def generate_tree():
  """Generates a graphviz Digraph object from a nested dictionary."""

  #dot = Digraph(comment='Questions Tree')

  #########################################
  def add_node(tree, parent, child, label):
        """
        Adds a new node to the tree.

        Args:
            tree: The tree dictionary.
            parent: The parent node.
            child: The child node.
            label: The label for the edge between parent and child.
        """
        if parent not in tree:
            tree[parent] = {}
        tree[parent][child] = label

        # Create an empty tree dictionary
        tree = {}

        # Add nodes to the tree
        add_node(tree, 'цвет', 'размер', 'зеленый')
        add_node(tree, 'цвет', 'форма', 'желтый')
        add_node(tree, 'цвет', 'размер', 'красный')
        add_node(tree, 'размер', 'арбуз', 'большой')
        add_node(tree, 'размер', 'яблоко', 'средний')
        add_node(tree, 'размер', 'виноград', 'маленький')
        add_node(tree, 'форма', 'размер', 'круглая')
        add_node(tree, 'форма', 'банан', 'продолговатая')
        add_node(tree, 'размер', 'грейпфрут', 'большой')
        add_node(tree, 'размер', 'лимон', 'маленький')
        add_node(tree, 'размер', 'яблоко', 'средний')
        add_node(tree, 'размер', 'вкус', 'маленький')
        add_node(tree, 'вкус', 'вишня', 'сладкий')
        add_node(tree, 'вкус', 'виноград', 'кислый')

        # Print the tree
        print(tree)

        

data = {
    'живое': 
    {
        'человек': 
        {
            'профессия': 
            {
                'весёлая': 'клоун',
                'тяжёлая': 'врач'
            }
        },
        'животное': 
        {
           'большой': 'слон',
           'маленький': 'хомяк'
        },
        'растение': 
        {
            'размер': 
            {
                'средний': 'яблоко',
                'маленький': 'вишня'
            }
        }
 }
 }

#dot = generate_tree(data)
#dot.render('quest_tree', view=True) 

'''
mem_granules={
        'горячо',
        'тепло',
        'нейтрально',
        'прохладно',
        'холодно',
        }

def questions_ask():
    print("Оно живое?")
    first_question=input()


    print("Оно материальное(можно пощупать)?")
    second_question=input()

    print("Это абстрактное понятие?")
    third_question=input()

    print("Оно большое?")
    fourth_question=input()


def answer_print():
    print("Введите ваше слово для проверки")
    answer=input()
    print(navec.vocab[answer])
'''
    
    